import React, {useEffect, useState} from 'react'
import {Link, Redirect} from "react-router-dom";
import useFetch from "hooks/useFetch";
import useLocalStorage from "hooks/useLocalStorage";

const Authentication = (props) => {

    const isLogin = props.match.path === '/login'
    const pageTitle = isLogin ? 'Sign In' : 'Sign Up'
    const descriptionLink = isLogin ? '/register' : '/login'
    const descriptionText = isLogin ? 'Need an acount' : 'Have an acount'
    const descriptionButton = isLogin ? 'Sign In' : 'Register'
    const apiUrl = isLogin ? '/users/login' : '/users'
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)
    const [username, setUserName] = useState('')

    const [{responce, isLoading}, doFetch] = useFetch(apiUrl)
    const [token, setToken] = useLocalStorage('token')
    const handleSubmit = (e) => {
        console.log(token);
        e.preventDefault()
        const user = isLogin ? {email, password} : {email, password, username}
        doFetch({
            method: 'post',
            data: {user: user}
        })
    }


    useEffect(() => {
        if (!responce) {
            return
        }
        setToken(responce.user.token)
        setIsSuccessfullSubmit(true)
    }, [responce, setToken])
    if (isSuccessfullSubmit) {
        return <Redirect to={'/'} />
    }

    return (
        <div className={'auth-page'}>
            <div className={'container page'}>
                <div className={'row'}>
                    <div className={'col-md-6 offset-md-3 col-xs-12'}>
                        <h1 className={'text-xs-center'}>{pageTitle}</h1>
                        <p className={'text-xs-center'}>
                            <Link to={descriptionLink}>{descriptionText}</Link>
                        </p>
                        <form onSubmit={handleSubmit}>
                            {!isLogin && (
                                <fieldset>
                                    <fieldset className={'form-group'}>
                                        <input
                                            type={'text'}
                                            onChange={e => setUserName(e.target.value)}
                                            value={username}
                                            className={'form-control form-control-lg'}
                                            placeholder={'username'}/>
                                    </fieldset>
                                </fieldset>
                            )}
                            <fieldset>
                                <fieldset className={'form-group'}>
                                    <input
                                        type={'email'}
                                        onChange={e => setEmail(e.target.value)}
                                        value={email}
                                        className={'form-control form-control-lg'}
                                        placeholder={'Email'}/>
                                </fieldset>
                            </fieldset>
                            <fieldset>
                                <fieldset className={'form-group'}>
                                    <input type={'password'}
                                           value={password}
                                           onChange={e => setPassword(e.target.value)}
                                           className={'form-control form-control-lg'}
                                           placeholder={'password'}/>
                                </fieldset>
                            </fieldset>
                            <button
                                className={'btn btn-lg btn-primary pull-xs-right'}
                                type={'submit'}
                                disabled={isLoading}>
                                {descriptionButton}
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    )
}

export default Authentication
