import {useContext, useEffect} from "react";
import useFetch from "hooks/useFetch";
import {CurrentUserContext} from 'context/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'

const CurrentUserChecker = ({children}) => {
    const [{responce}, doFetch] = useFetch('/user')
    const [currentUserState, setCurrentUserState] = useContext(CurrentUserContext)
    const [token] = useLocalStorage('token')

    useEffect(() => {
        if (!token) {
            setCurrentUserState(state => ({
                ...state,
                isLoggedIn: false
            }))
            return
        }
        doFetch()
        setCurrentUserState(state => ({
            ...state,
            isLoading: true
        }))
    }, [token, setCurrentUserState, doFetch])

    useEffect(() => {
        if (!responce) {
            return
        }
        setCurrentUserState(state => ({
            ...state,
            isLoggedIn: true,
            isLoading: false,
            currentUser: responce.user
        }))
    }, [responce, setCurrentUserState])
    return children
}

export default CurrentUserChecker
